name: Python verifications
on: [push, pull_request]

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
        node-version: ["14"]
        os: [ubuntu-20.04, windows-latest, macos-11]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Poetry
        uses: snok/install-poetry@v1
      - name: Install Python Dependencies
        shell: bash
        run: poetry install
      - name: Test Python packages
        shell: bash
        run: poetry run pytest --doctest-modules
      - name: Test Python types (mypy)
        shell: bash
        run: poetry run mypy apps
      - name: Python code style (black)
        shell: bash
        run: poetry run black apps --check
      - name: Python code style (pylint)
        shell: bash
        run: poetry run pylint $(git ls-files '*.py')
      - name: validate that Test Course Json files are up to date
        run: |
          poetry install --no-interaction
          cd apps/librelingo_yaml_loader
          poetry install --no-interaction
          cd ../librelingo_json_export
          poetry install --no-interaction
          cd ../..
          ./scripts/verifyTestCourseJsonFiles.sh
